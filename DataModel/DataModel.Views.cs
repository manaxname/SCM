//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(DataModel.SCMEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsde71e167eb283c44614bf6d15557e41093cd39dd9b16382b7a5065e46a903ddb))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySetsde71e167eb283c44614bf6d15557e41093cd39dd9b16382b7a5065e46a903ddb : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "de71e167eb283c44614bf6d15557e41093cd39dd9b16382b7a5065e46a903ddb"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "SCMModelStoreContainer.Address")
            {
                return GetView0();
            }

            if (extentName == "SCMModelStoreContainer.User")
            {
                return GetView1();
            }

            if (extentName == "SCMModelStoreContainer.UserAddress")
            {
                return GetView2();
            }

            if (extentName == "SCMEntities.Addresses")
            {
                return GetView3();
            }

            if (extentName == "SCMEntities.Users")
            {
                return GetView4();
            }

            if (extentName == "SCMEntities.UserAddresses")
            {
                return GetView5();
            }

            if (extentName == "SCMModelStoreContainer.Category")
            {
                return GetView6();
            }

            if (extentName == "SCMModelStoreContainer.Product")
            {
                return GetView7();
            }

            if (extentName == "SCMEntities.Categories")
            {
                return GetView8();
            }

            if (extentName == "SCMEntities.Products")
            {
                return GetView9();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for SCMModelStoreContainer.Address.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Address
        [SCMModel.Store.Address](T1.Address_Id, T1.Address_NumberOfBuildings, T1.Address_Zip, T1.Address_Street, T1.Address_City, T1.Address_District, T1.Address_State, T1.Address_Country)
    FROM (
        SELECT 
            T.Id AS Address_Id, 
            T.NumberOfBuildings AS Address_NumberOfBuildings, 
            T.Zip AS Address_Zip, 
            T.Street AS Address_Street, 
            T.City AS Address_City, 
            T.District AS Address_District, 
            T.State AS Address_State, 
            T.Country AS Address_Country, 
            True AS _from0
        FROM SCMEntities.Addresses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SCMModelStoreContainer.User.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing User
        [SCMModel.Store.User](T1.User_Id, T1.User_Name, T1.User_Surname, T1.User_Patronymic, T1.User_Birthday, T1.User_Email, T1.User_Phone)
    FROM (
        SELECT 
            T.Id AS User_Id, 
            T.Name AS User_Name, 
            T.Surname AS User_Surname, 
            T.Patronymic AS User_Patronymic, 
            T.Birthday AS User_Birthday, 
            T.Email AS User_Email, 
            T.Phone AS User_Phone, 
            True AS _from0
        FROM SCMEntities.Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SCMModelStoreContainer.UserAddress.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserAddress
        [SCMModel.Store.UserAddress](T1.UserAddress_Id, T1.UserAddress_UserId, T1.UserAddress_AddressId)
    FROM (
        SELECT 
            T.Id AS UserAddress_Id, 
            T.UserId AS UserAddress_UserId, 
            T.AddressId AS UserAddress_AddressId, 
            True AS _from0
        FROM SCMEntities.UserAddresses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SCMEntities.Addresses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Addresses
        [SCMModel.Address](T1.Address_Id, T1.Address_NumberOfBuildings, T1.Address_Zip, T1.Address_Street, T1.Address_City, T1.Address_District, T1.Address_State, T1.Address_Country)
    FROM (
        SELECT 
            T.Id AS Address_Id, 
            T.NumberOfBuildings AS Address_NumberOfBuildings, 
            T.Zip AS Address_Zip, 
            T.Street AS Address_Street, 
            T.City AS Address_City, 
            T.District AS Address_District, 
            T.State AS Address_State, 
            T.Country AS Address_Country, 
            True AS _from0
        FROM SCMModelStoreContainer.Address AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SCMEntities.Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Users
        [SCMModel.User](T1.User_Id, T1.User_Name, T1.User_Surname, T1.User_Patronymic, T1.User_Birthday, T1.User_Email, T1.User_Phone)
    FROM (
        SELECT 
            T.Id AS User_Id, 
            T.Name AS User_Name, 
            T.Surname AS User_Surname, 
            T.Patronymic AS User_Patronymic, 
            T.Birthday AS User_Birthday, 
            T.Email AS User_Email, 
            T.Phone AS User_Phone, 
            True AS _from0
        FROM SCMModelStoreContainer.User AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SCMEntities.UserAddresses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserAddresses
        [SCMModel.UserAddress](T1.UserAddress_Id, T1.UserAddress_UserId, T1.UserAddress_AddressId)
    FROM (
        SELECT 
            T.Id AS UserAddress_Id, 
            T.UserId AS UserAddress_UserId, 
            T.AddressId AS UserAddress_AddressId, 
            True AS _from0
        FROM SCMModelStoreContainer.UserAddress AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SCMModelStoreContainer.Category.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Category
        [SCMModel.Store.Category](T1.Category_Id, T1.Category_Name, T1.Category_ParentCategoryId)
    FROM (
        SELECT 
            T.Id AS Category_Id, 
            T.Name AS Category_Name, 
            T.ParentCategoryId AS Category_ParentCategoryId, 
            True AS _from0
        FROM SCMEntities.Categories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SCMModelStoreContainer.Product.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Product
        [SCMModel.Store.Product](T1.Product_Code, T1.Product_Name, T1.Product_Description, T1.Product_Status, T1.Product_CategoryId)
    FROM (
        SELECT 
            T.Code AS Product_Code, 
            T.Name AS Product_Name, 
            T.Description AS Product_Description, 
            T.Status AS Product_Status, 
            T.CategoryId AS Product_CategoryId, 
            True AS _from0
        FROM SCMEntities.Products AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SCMEntities.Categories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Categories
        [SCMModel.Category](T1.Category_Id, T1.Category_Name, T1.Category_ParentCategoryId)
    FROM (
        SELECT 
            T.Id AS Category_Id, 
            T.Name AS Category_Name, 
            T.ParentCategoryId AS Category_ParentCategoryId, 
            True AS _from0
        FROM SCMModelStoreContainer.Category AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SCMEntities.Products.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Products
        [SCMModel.Product](T1.Product_Code, T1.Product_Name, T1.Product_Description, T1.Product_Status, T1.Product_CategoryId)
    FROM (
        SELECT 
            T.Code AS Product_Code, 
            T.Name AS Product_Name, 
            T.Description AS Product_Description, 
            T.Status AS Product_Status, 
            T.CategoryId AS Product_CategoryId, 
            True AS _from0
        FROM SCMModelStoreContainer.Product AS T
    ) AS T1");
        }
    }
}
